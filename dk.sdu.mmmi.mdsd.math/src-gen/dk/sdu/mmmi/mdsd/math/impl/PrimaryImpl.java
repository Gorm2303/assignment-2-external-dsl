/**
 * generated by Xtext 2.33.0
 */
package dk.sdu.mmmi.mdsd.math.impl;

import dk.sdu.mmmi.mdsd.math.Expression;
import dk.sdu.mmmi.mdsd.math.MathPackage;
import dk.sdu.mmmi.mdsd.math.Primary;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Primary</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.mmmi.mdsd.math.impl.PrimaryImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.math.impl.PrimaryImpl#getParenthesis <em>Parenthesis</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.math.impl.PrimaryImpl#getVariableUse <em>Variable Use</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.math.impl.PrimaryImpl#getVariableBinding <em>Variable Binding</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PrimaryImpl extends ExpressionImpl implements Primary
{
  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected Expression number;

  /**
   * The cached value of the '{@link #getParenthesis() <em>Parenthesis</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParenthesis()
   * @generated
   * @ordered
   */
  protected Expression parenthesis;

  /**
   * The cached value of the '{@link #getVariableUse() <em>Variable Use</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableUse()
   * @generated
   * @ordered
   */
  protected Expression variableUse;

  /**
   * The cached value of the '{@link #getVariableBinding() <em>Variable Binding</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableBinding()
   * @generated
   * @ordered
   */
  protected Expression variableBinding;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PrimaryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MathPackage.Literals.PRIMARY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber(Expression newNumber, NotificationChain msgs)
  {
    Expression oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__NUMBER, oldNumber, newNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(Expression newNumber)
  {
    if (newNumber != number)
    {
      NotificationChain msgs = null;
      if (number != null)
        msgs = ((InternalEObject)number).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__NUMBER, null, msgs);
      if (newNumber != null)
        msgs = ((InternalEObject)newNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__NUMBER, null, msgs);
      msgs = basicSetNumber(newNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__NUMBER, newNumber, newNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getParenthesis()
  {
    return parenthesis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParenthesis(Expression newParenthesis, NotificationChain msgs)
  {
    Expression oldParenthesis = parenthesis;
    parenthesis = newParenthesis;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__PARENTHESIS, oldParenthesis, newParenthesis);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParenthesis(Expression newParenthesis)
  {
    if (newParenthesis != parenthesis)
    {
      NotificationChain msgs = null;
      if (parenthesis != null)
        msgs = ((InternalEObject)parenthesis).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__PARENTHESIS, null, msgs);
      if (newParenthesis != null)
        msgs = ((InternalEObject)newParenthesis).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__PARENTHESIS, null, msgs);
      msgs = basicSetParenthesis(newParenthesis, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__PARENTHESIS, newParenthesis, newParenthesis));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getVariableUse()
  {
    return variableUse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariableUse(Expression newVariableUse, NotificationChain msgs)
  {
    Expression oldVariableUse = variableUse;
    variableUse = newVariableUse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__VARIABLE_USE, oldVariableUse, newVariableUse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariableUse(Expression newVariableUse)
  {
    if (newVariableUse != variableUse)
    {
      NotificationChain msgs = null;
      if (variableUse != null)
        msgs = ((InternalEObject)variableUse).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__VARIABLE_USE, null, msgs);
      if (newVariableUse != null)
        msgs = ((InternalEObject)newVariableUse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__VARIABLE_USE, null, msgs);
      msgs = basicSetVariableUse(newVariableUse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__VARIABLE_USE, newVariableUse, newVariableUse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getVariableBinding()
  {
    return variableBinding;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariableBinding(Expression newVariableBinding, NotificationChain msgs)
  {
    Expression oldVariableBinding = variableBinding;
    variableBinding = newVariableBinding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__VARIABLE_BINDING, oldVariableBinding, newVariableBinding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariableBinding(Expression newVariableBinding)
  {
    if (newVariableBinding != variableBinding)
    {
      NotificationChain msgs = null;
      if (variableBinding != null)
        msgs = ((InternalEObject)variableBinding).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__VARIABLE_BINDING, null, msgs);
      if (newVariableBinding != null)
        msgs = ((InternalEObject)newVariableBinding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MathPackage.PRIMARY__VARIABLE_BINDING, null, msgs);
      msgs = basicSetVariableBinding(newVariableBinding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MathPackage.PRIMARY__VARIABLE_BINDING, newVariableBinding, newVariableBinding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MathPackage.PRIMARY__NUMBER:
        return basicSetNumber(null, msgs);
      case MathPackage.PRIMARY__PARENTHESIS:
        return basicSetParenthesis(null, msgs);
      case MathPackage.PRIMARY__VARIABLE_USE:
        return basicSetVariableUse(null, msgs);
      case MathPackage.PRIMARY__VARIABLE_BINDING:
        return basicSetVariableBinding(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MathPackage.PRIMARY__NUMBER:
        return getNumber();
      case MathPackage.PRIMARY__PARENTHESIS:
        return getParenthesis();
      case MathPackage.PRIMARY__VARIABLE_USE:
        return getVariableUse();
      case MathPackage.PRIMARY__VARIABLE_BINDING:
        return getVariableBinding();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MathPackage.PRIMARY__NUMBER:
        setNumber((Expression)newValue);
        return;
      case MathPackage.PRIMARY__PARENTHESIS:
        setParenthesis((Expression)newValue);
        return;
      case MathPackage.PRIMARY__VARIABLE_USE:
        setVariableUse((Expression)newValue);
        return;
      case MathPackage.PRIMARY__VARIABLE_BINDING:
        setVariableBinding((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MathPackage.PRIMARY__NUMBER:
        setNumber((Expression)null);
        return;
      case MathPackage.PRIMARY__PARENTHESIS:
        setParenthesis((Expression)null);
        return;
      case MathPackage.PRIMARY__VARIABLE_USE:
        setVariableUse((Expression)null);
        return;
      case MathPackage.PRIMARY__VARIABLE_BINDING:
        setVariableBinding((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MathPackage.PRIMARY__NUMBER:
        return number != null;
      case MathPackage.PRIMARY__PARENTHESIS:
        return parenthesis != null;
      case MathPackage.PRIMARY__VARIABLE_USE:
        return variableUse != null;
      case MathPackage.PRIMARY__VARIABLE_BINDING:
        return variableBinding != null;
    }
    return super.eIsSet(featureID);
  }

} //PrimaryImpl
